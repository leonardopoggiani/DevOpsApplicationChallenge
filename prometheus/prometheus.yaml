apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
              readOnly: true
        - name: alertmanager
          image: prom/alertmanager
          args:
            - "--config.file=/etc/alertmanager/config.yml"
          ports:
            - containerPort: 9093
          volumeMounts:
            - name: alertmanager-config-volume
              mountPath: /etc/alertmanager/
              readOnly: true
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
        - name: alertmanager-config-volume
          configMap:
            name: alertmanager-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        monitor: 'prometheus-monitor'
        environment: 'production'
    rule_files:
      - /etc/config/rules
    scrape_configs:
    - job_name: 'prometheus'
      scrape_interval: 5s
      static_configs:
        - targets: ['localhost:9090']
          
    - job_name: mariadb
      static_configs:
        - targets: ['mariadb-service-prod.production.svc.cluster.local:9104']
  
    - job_name: postgres
      static_configs:
        - targets: ['postgres-service-prod.production.svc.cluster.local:9187']
  
    - job_name: shiori
      static_configs:
        - targets: ['shiori-service-prometheus-prod.production.svc.cluster.local:9292']
          
    - job_name: kube-dns
      static_configs:
        - targets: ['kube-dns.kube-system.svc.cluster.local:9153']
          
    - job_name: shiori-qa
      static_configs:
        - targets: ['shiori-service-qa.quality-assurance.svc.cluster.local:9292']

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  config.yml: |-
    global:
      slack_api_url: 'https://hooks.slack.com/services/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'
    
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 1m
      repeat_interval: 3h
      receiver: 'slack'
    
    receivers:
      - name: 'slack'
        slack_configs:
          - send_resolved: true
            username: 'Alertmanager'
            channel: '#alerts'
            color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
            text: >
              {{- if .Alerts.Firing -}}
                *Alert:* {{ .CommonLabels.alertname }} - `{{ .CommonLabels.environment }}`
                *Severity:* {{ .CommonLabels.severity }}
                *Description:* {{ .CommonAnnotations.description }}
                *Details:*
                {{ range .Alerts }}
                  {{- .Labels.instance }} {{ .Annotations.message }}
                {{ end }}
              {{- else -}}
                *Resolved:* {{ .CommonLabels.alertname }} - `{{ .CommonLabels.environment }}`
                *Severity:* {{ .CommonLabels.severity }}
              {{- end -}}

