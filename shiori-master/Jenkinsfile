pipeline {
  agent {
    kubernetes {
        yaml """
                apiVersion: v1
                kind: Pod
                metadata:
                  labels:
                    app: shiori-pipeline
                spec:
                  containers:
                  - name: golang
                    image: golang:1.20.1
                    command:
                    - sleep
                    args:
                    - 99d
              """
              defaultContainer 'golang'
    }
  }

  environment {
    SHIORI_TEST_MYSQL_URL = 'shiori-prod:shiori-prod@tcp(mariadb-service-prod.production.svc.cluster.local:3306)/test_db'
    SHIORI_TEST_PG_URL = 'shiori-prod:shiori-prod@tcp(mariadb-service-prod.production.svc.cluster.local:5432)/test_db'
  }

  stages {
    stage('Download dependencies') {
      steps {
        dir("shiori-master") {
          sh 'go mod download'
        }
      }
    }

    stage('Build') {
      steps {
        dir("shiori-master") {
          sh 'go build -o shiori main.go'
        }
      }
    }

    stage('Test') {
      steps {
        dir("shiori-master") {
          sh 'go test -v ./...'
        }
      }
    }

    stage('Deploy') {
      when {
        allOf {
          environment name: 'BUILD_STATUS', value: 'SUCCESS'
          branch 'master'
        }
      }

      steps {
        input "Deploy to QA environment?"
        sh 'kubectl apply -f shiori-master/deploy/minikube/multi-environment/ns-quality-assurance.yaml'
        sh 'kubectl apply -f shiori-master/deploy/minikube/multi-environment/shiori-qa.yaml'
      }
    }

    stage('Manual test') {
      when {
        allOf {
          environment name: 'BUILD_STATUS', value: 'SUCCESS'
          branch 'master'
        }
      }

      steps {
        sh 'echo "Shiori is ready for manual testing!"'
      }
    }
  }

  post {
    always {
      junit allowEmptyResults: true, testResults: '**/reports/*.xml', skipPublishingChecks: true
      archiveArtifacts artifacts: 'shiori', fingerprint: true
    }
  }
}
